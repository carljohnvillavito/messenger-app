    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Chat</title>
        <link rel="stylesheet" href="/css/style.css">
    </head>
    <body>
        <div class="chat-container">
            <header class="chat-header">
                <h1>Chat</h1>
                <p>Logged in as: <%= user.username %></p>
            </header>
            <div class="chat-tabs">
                 <button class="tab active" data-tab="public">Public</button>
                 <button class="tab" data-tab="pms">Pm's</button>
                 <button class="tab" data-tab="profile">Profile</button>
             </div>
            <div class="tab-content active" id="public">
            <div class="messages-container" id="messages">
            </div>
                <form id="message-form" class="message-form">
                    <input type="file" id="attachment-input" accept="image/*,video/*" class="attachment-input">
                    <input type="text" id="message-input" placeholder="Type your message..." required>
                    <button type="submit">Send</button>
                </form>
             </div>
             <div class="tab-content" id="pms">
                  <div class="messages-container" id="pm-messages">
                       <p>No private messages yet.</p>
                  </div>
             </div>
            <div class="tab-content" id="profile">
            <div class="profile-content">
                    <h2>Profile</h2>
                        <p><strong>Full Name:</strong> <%= user.fullname %></p>
                      <p><strong>Username:</strong> <%= user.username %></p>
                        <p><strong>User ID:</strong> <span id="user-id"><%= user._id %></span> <button id="copy-user-id">Copy</button></p>
                       <button id="logout-button" class="logout-btn">Logout</button>
                  </div>
             </div>
        </div>

        <script src="/socket.io/socket.io.js"></script>
        <script>
            const socket = io();
            const messageForm = document.getElementById('message-form');
            const messageInput = document.getElementById('message-input');
            const messagesContainer = document.getElementById('messages');
            const attachmentInput = document.getElementById('attachment-input'); // Attachment
            let messages = <%- JSON.stringify(messages) %>;
            const user = <%- JSON.stringify(user) %>;
            const pmContainer = document.getElementById('pm-messages');
            const userIdSpan = document.getElementById('user-id');
            const copyUserIdButton = document.getElementById('copy-user-id');
            const logoutButton = document.getElementById('logout-button');
            const tabButtons = document.querySelectorAll('.tab');
            const tabContents = document.querySelectorAll('.tab-content');

            function displayMessages () {
              messagesContainer.innerHTML = "";
                messages.forEach(message => {
                    const messageDiv = document.createElement('div');
                     messageDiv.classList.add('message');
                   if (message.sender._id === user._id) {
                     messageDiv.classList.add('message-sent');
                   } else {
                     messageDiv.classList.add('message-received');
                    }
                       let content = message.content;
                    if (message.attachment) {
                        const attachmentUrl = message.attachment;
                         if (attachmentUrl.startsWith('image')) {
                            content += `<img src="${attachmentUrl}" alt="Attachment" class="message-attachment">`;
                        } else if (attachmentUrl.startsWith('video')) {
                           content += `<video src="${attachmentUrl}" controls class="message-attachment"></video>`;
                       }
                  }
                  messageDiv.innerHTML = `<span class="sender-name"><a  href="/user/${message.sender._id}"><img src="/img/human_logo.png" alt="Profile Photo" class="profile-photo"></a> ${message.sender.username}: </span> ${content}`;
                 messagesContainer.appendChild(messageDiv);
                 });
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
             displayMessages();

            messageForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const messageContent = messageInput.value.trim();
                const attachmentFile = attachmentInput.files[0];

              if (!messageContent && !attachmentFile) {
                    return;
               }
               let attachmentUrl = null;
               if (attachmentFile) {
                   attachmentUrl = URL.createObjectURL(attachmentFile);
                }
                const message = {
                    sender: user,
                     content: messageContent,
                   timestamp: new Date(),
                    attachment: attachmentUrl
                };

               socket.emit('chat message', message);
                messageInput.value = '';
                attachmentInput.value = null;
            });
            socket.on('chat message', function(msg) {
                messages.push(msg);
               displayMessages();
            });

            copyUserIdButton.addEventListener('click', () => {
               navigator.clipboard.writeText(userIdSpan.textContent)
                 .then(() => {
                  alert('User ID copied to clipboard!');
               })
               .catch(err => console.error('Failed to copy User ID: ', err));
         });
           logoutButton.addEventListener('click', () => {
               window.location.href = '/logout';
          });
            tabButtons.forEach(tab => {
              tab.addEventListener('click', () => {
                 tabButtons.forEach(btn => btn.classList.remove('active'));
                   tabContents.forEach(content => content.classList.remove('active'));
                tab.classList.add('active');
                document.getElementById(tab.dataset.tab).classList.add('active');
         });
         });
        </script>
    </body>
    </html>
