<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="chat-container">
        <header class="chat-header">
            <h1>Chat</h1>
            <p>Logged in as: <%= user.username %></p>
            <a href="/logout" class="logout-btn">Logout</a>
        </header>
        <div class="messages-container" id="messages">

        </div>
        <form id="message-form" class="message-form">
             <input type="text" id="message-input" placeholder="Type your message..." required>
             <button type="submit">Send</button>
         </form>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const messageForm = document.getElementById('message-form');
        const messageInput = document.getElementById('message-input');
        const messagesContainer = document.getElementById('messages');
        let messages = <%- JSON.stringify(messages) %>;
        const user = <%- JSON.stringify(user) %>;

         function displayMessages () {
             messagesContainer.innerHTML = "";
             messages.forEach(message => {
                 const messageDiv = document.createElement('div');
                 messageDiv.classList.add('message');
                 if (message.sender._id === user._id) {
                 messageDiv.classList.add('message-sent');
                 } else {
                 messageDiv.classList.add('message-received');
                 }
                 messageDiv.innerHTML = `<span class="sender-name"> ${message.sender.username}: </span> ${message.content}`;
                 messagesContainer.appendChild(messageDiv);
             });
              // Keep scroll at bottom
             messagesContainer.scrollTop = messagesContainer.scrollHeight;
         }
        displayMessages();

        messageForm.addEventListener('submit', function(e) {
            e.preventDefault();
            if (messageInput.value) {
               const message = {
                   sender: user,
                   content: messageInput.value,
                   timestamp: new Date()
               };
               socket.emit('chat message', message);
               messageInput.value = '';
            }
        });

        socket.on('chat message', function(msg) {
             messages.push(msg);
             displayMessages();
        });
    </script>
</body>
</html>
